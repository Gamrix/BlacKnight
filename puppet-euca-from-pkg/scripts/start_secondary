#!/bin/bash
#
# scripts/start_secondary
#	Start and register a new secondary head node
#

######################################################################
# TODO
# If we are starting a secondary after failover, we must deregister
# the old secondary from the primer...
######################################################################

source util.sh

main() {
	parse_args
	start_secondary_head
	register_secondary_head
	register_eucalyptus_components
	get_eucalytpus_credentials
	configure_eucalyptus
}

######################################################################
# Start Eucalyptus services
# Globals:
#	none
# Arguments:
#	none
# Returns:
#	none
######################################################################

start_secondary_head() {
	service eucalyptus-cloud start
	#TODO: Do we need to wait?
	tail -F /var/log/eucalyptus/cloud-output.log | awk '/Detected Interfaces/ {exit}'
	service eucalyptus-cc start
}

#######################################################################
# Register secondary head with primary
# Globals:
#	none
# Arguments:
#	none
# Returns:
#	none
######################################################################

register_secondary_head() {
    ssh "$PRIMARY_HEAD"<<EOF
euca_conf --register-cloud -P eucalyptus -H "$PUBLIC_IP" -C "clc-$NODENAME"
EOF
}

#####################################################################
# Register Eucalyptus components
# Globals:
#	CC_PART
#	EUCA_NODES
#	NODENAME
#	PUBLIC_IP
# Arguments:
#	none
# Returns:
#	none
######################################################################

register_eucalyptus_components() {
	euca_conf --register-service -T user-api -H "$PUBLIC_IP" -N "api-$NODENAME"
	euca_conf --register-cluster -P $CC_PART -H "$PUBLIC_IP" -C "cc-$NODENAME"
	euca_conf --register-sc -P $CC_PART -H "$PUBLIC_IP" -C "sc-$NODENAME"
	for euca_node in ${EUCA_NODES[@]}; do
		euca_conf --register-nodes $euca_node
	done
}

######################################################################
# Configure the Eucalyptus Object Storage Gateway to use Riak CS
# Globals:
#	CCPART
#	PUBLIC_IP
#	RIAKCS_KEY
#	RIAKCS_SECRET
# Arguments:
#	none
# Returns:
#	none
######################################################################

configure_eucalyptus() {
	euca-modify-property -p objectstorage.providerclient=s3
	euca-modify-property -p objectstorage.s3provider.s3endpoint="$PUBLIC_IP:9090"
	euca-modify-property -p objectstorage.s3provider.s3accesskey="$RIAKCS_KEY"
	euca-modify-property -p objectstorage.s3provider.s3secretkey="$RIAKCS_SECRET"
	euca-modify-property -p $CC_PART.storage.blockstoragemanager=overlay
}

main
